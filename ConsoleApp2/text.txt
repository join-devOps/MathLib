using System;
using System.IO;
using MathLib;

namespace ConsoleApp2
{
    class Program
    {
        static void pasteFile(double[] numbers, byte number)
        {
            string path = Directory.GetCurrentDirectory() + @"\test.txt";
            if (!File.Exists(path))
            {
                var file = File.Create(path);
                file.Close();
            }

            if (number == 1)
            {
                File.AppendAllText(path, numbers + ", ");
                File.AppendAllText(path, "\n");
            }
            if (number == 2)
            {
                
            }
            if (number == 3)
            {

            }
            if (number == 4)
            {

            }
        }

        static void lessons_1(double[] numbers, byte kol)
        {
            for (byte i = 0; i < kol; i++)
            {
                Console.Write(numbers[i] + " , ");
            }
            Console.WriteLine("");

            Console.WriteLine("Sum = " + MathCl.Sum(numbers));
            Console.WriteLine("Mul = " + MathCl.Mul(numbers));
            Console.WriteLine("Average = " + MathCl.Average(numbers));
            Console.WriteLine("GeomAverage = " + MathCl.GeomAverage(numbers));
        }

        static void lessons_2(double[] numbers, double[,] numsMas, double[,] numMas_2, bool dir, byte kol)
        {
            for (byte i = 0; i < kol; i++)
            {
                for (byte j = 0; j < kol; j++)
                {
                    Console.Write(numsMas[i, j] + "\t");
                }
                Console.WriteLine("");
            }
            Console.WriteLine("");

            for (byte i = 0; i < kol; i++)
            {
                for (byte j = 0; j < kol; j++)
                {
                    Console.Write(numMas_2[i, j] + "\t");
                }
                Console.WriteLine("");
            }
            Console.WriteLine("");

            Arranges.ArrSort(numbers, dir);
            {
                Console.Write("ArrSort = ");
                for (byte i = 0; i < kol; i++)
                {
                    Console.Write(" " + numbers[i]);
                }
            }
            Console.WriteLine("");

            Arranges.ArrFind(numbers, dir);
            Console.Write("ArrFind = ");
            for (int i = 0; i < kol; i++)
            {
                Console.Write(" " + numbers[i]);
            }
            Console.WriteLine("");

            for (byte i = 0; i < kol; i++)
            {
                for (byte j = 0; j < kol; j++)
                {
                    Console.Write(numsMas[i, j] + "\t");
                }
                Console.WriteLine("");
            }
            Console.WriteLine("");

            Console.WriteLine("ArrDet = " + Arranges.ArrDet(numsMas));

            Arranges.MatrixSum(numsMas, numMas_2);
            {
                Console.WriteLine("MatrixSum: ");
                for (byte i = 0; i < kol; i++)
                {
                    for (byte j = 0; j < kol; j++)
                    {
                        Console.Write(numsMas[i, j] + "\t");
                    }
                    Console.WriteLine("");
                }
                Console.WriteLine("");
            }

            Arranges.MatrixMul(numsMas, numMas_2);
            {
                Console.WriteLine("MatrixMul: ");
                for (byte i = 0; i < kol; i++)
                {
                    for (byte j = 0; j < kol; j++)
                    {
                        Console.Write(numMas_2[i, j] + "\t");
                    }
                    Console.WriteLine("");
                }
                Console.WriteLine("");
            }
        }

        static void Main(string[] args)
        {
            Random rand = new Random();
            
            byte kol = (byte)rand.Next(2, 6);
            double[] nums = new double[kol];
            double[,] numsMas = new double[kol, kol];
            double[,] numMas_2 = new double[kol, kol];
            bool dir = rand.Next(0, 2) > 0;

            for (byte i = 0; i < kol; i++)
            {
                nums[i] = rand.Next(1, 5);
            }

            lessons_1(nums, kol);
            Console.WriteLine("");

            for (byte i = 0; i < kol; i++)
            {
                for (byte j = 0; j < kol; j++)
                {
                    numsMas[i, j] = rand.Next(1, 15);
                    numMas_2[i, j] = rand.Next(1, 15);
                }
            }

            lessons_2(nums, numsMas, numMas_2, dir, kol);
            Console.WriteLine("");

            Console.ReadKey();
        }
    }
}